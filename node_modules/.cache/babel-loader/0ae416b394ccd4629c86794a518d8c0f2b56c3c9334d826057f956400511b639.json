{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\mern\\\\Ethiotelecom\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { registerStudent, loginStudent, getStudentProfile } from '../services/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Register function\n  const register = async userData => {\n    setLoading(true);\n    try {\n      const response = await registerStudent(userData);\n      const {\n        user: backendUser,\n        token\n      } = response.data;\n\n      // Map backend user to frontend user format\n      const frontendUser = {\n        id: backendUser.id,\n        phone: backendUser.phoneNumber,\n        username: backendUser.userName,\n        school: backendUser.school\n      };\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(frontendUser));\n      setUser(frontendUser);\n      toast.success('Registration successful! Welcome! ðŸŽ‰');\n      setLoading(false);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed';\n      toast.error(message);\n      setLoading(false);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Login function\n  const login = async (phone, password) => {\n    setLoading(true);\n    try {\n      const response = await loginStudent({\n        phone,\n        password\n      });\n      const {\n        user: backendUser,\n        token\n      } = response.data;\n\n      // Map backend user to frontend user format\n      const frontendUser = {\n        id: backendUser.id,\n        phone: backendUser.phoneNumber,\n        username: backendUser.userName,\n        school: backendUser.school\n      };\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(frontendUser));\n      setUser(frontendUser);\n      toast.success('Login successful! ðŸŽ‰');\n      setLoading(false);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed';\n      toast.error(message);\n      setLoading(false);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    toast.info('Logged out successfully');\n  };\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      setUser(JSON.parse(userData));\n    }\n  }, []);\n  const value = {\n    user,\n    register,\n    login,\n    logout,\n    loading,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Vot/f62t7wRmBOt67JIN3/+eVxk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","registerStudent","loginStudent","getStudentProfile","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","register","userData","response","backendUser","token","data","frontendUser","id","phone","phoneNumber","username","userName","school","localStorage","setItem","JSON","stringify","success","error","_error$response","_error$response$data","message","login","password","_error$response2","_error$response2$data","logout","removeItem","info","getItem","parse","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/mern/Ethiotelecom/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { registerStudent, loginStudent, getStudentProfile } from '../services/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await registerStudent(userData);\r\n      const { user: backendUser, token } = response.data;\r\n      \r\n      // Map backend user to frontend user format\r\n      const frontendUser = {\r\n        id: backendUser.id,\r\n        phone: backendUser.phoneNumber,\r\n        username: backendUser.userName,\r\n        school: backendUser.school\r\n      };\r\n      \r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(frontendUser));\r\n      setUser(frontendUser);\r\n      \r\n      toast.success('Registration successful! Welcome! ðŸŽ‰');\r\n      setLoading(false);\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      setLoading(false);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Login function\r\n  const login = async (phone, password) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await loginStudent({ phone, password });\r\n      const { user: backendUser, token } = response.data;\r\n      \r\n      // Map backend user to frontend user format\r\n      const frontendUser = {\r\n        id: backendUser.id,\r\n        phone: backendUser.phoneNumber,\r\n        username: backendUser.userName,\r\n        school: backendUser.school\r\n      };\r\n      \r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(frontendUser));\r\n      setUser(frontendUser);\r\n      \r\n      toast.success('Login successful! ðŸŽ‰');\r\n      setLoading(false);\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      setLoading(false);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    toast.info('Logged out successfully');\r\n  };\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      setUser(JSON.parse(userData));\r\n    }\r\n  }, []);\r\n\r\n  const value = {\r\n    user,\r\n    register,\r\n    login,\r\n    logout,\r\n    loading,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}